/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cds.simulationparameters;

import com.cds.lookup.PeopleLookupProvider;
import java.util.Collections;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.cds.simulationparameters//SimulationParametersTopComponent//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "SimulationParametersTopComponentTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "properties", openAtStartup = true, position = 2)
@ActionID(category = "Window", id = "com.cds.simulationparameters.SimulationParametersTopComponentTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_SimulationParametersTopComponentAction",
        preferredID = "SimulationParametersTopComponentTopComponent"
)
@Messages({
    "CTL_SimulationParametersTopComponentAction=SimulationParametersTopComponent",
    "CTL_SimulationParametersTopComponentTopComponent=SimulationParametersTopComponent Window",
    "HINT_SimulationParametersTopComponentTopComponent=This is a SimulationParametersTopComponent window"
})
public final class SimulationParametersTopComponent extends TopComponent implements LookupListener {

    private InstanceContent content;
    private Lookup lookup;
    //private Lookup.Result<Integer> resultPopulationNumber = null;
    private Integer populationNumber = 0;
    
    
    public SimulationParametersTopComponent() {
        initComponents();
        setName(Bundle.CTL_SimulationParametersTopComponentTopComponent());
        setToolTipText(Bundle.HINT_SimulationParametersTopComponentTopComponent());
        
        content=new InstanceContent();
        lookup=new AbstractLookup(content);
        
        simulationSpeedSlider.addChangeListener(new JSliderListener());
        
        //resultPopulationNumber = WindowManager.getDefault().findTopComponent("ImagePanel").getLookup().lookupResult(Integer.class);
        //resultPopulationNumber.addLookupListener(this);
        
        
        Lookup lookup = PeopleLookupProvider.getInstance().getLookup();
        Lookup.Result<Integer> result = lookup.lookupResult(Integer.class);
        result.addLookupListener(this);
        

    }
    
    @Override
    public Lookup getLookup()
    {
        return lookup;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        populationNumberField = new javax.swing.JTextField();
        simulationSpeedSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();

        jPanel4.setBackground(new java.awt.Color(205, 216, 216));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SimulationParametersTopComponent.class, "SimulationParametersTopComponent.jLabel1.text")); // NOI18N

        populationNumberField.setBackground(new java.awt.Color(205, 216, 216));
        populationNumberField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        populationNumberField.setForeground(new java.awt.Color(0, 51, 102));
        populationNumberField.setText(org.openide.util.NbBundle.getMessage(SimulationParametersTopComponent.class, "SimulationParametersTopComponent.populationNumberField.text")); // NOI18N
        populationNumberField.setBorder(null);
        populationNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populationNumberFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(populationNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(populationNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        simulationSpeedSlider.setBackground(new java.awt.Color(205, 216, 216));
        simulationSpeedSlider.setMaximum(2000);
        simulationSpeedSlider.setMinimum(30);
        simulationSpeedSlider.setMinorTickSpacing(980);
        simulationSpeedSlider.setPaintTicks(true);
        simulationSpeedSlider.setToolTipText(org.openide.util.NbBundle.getMessage(SimulationParametersTopComponent.class, "SimulationParametersTopComponent.simulationSpeedSlider.toolTipText")); // NOI18N
        simulationSpeedSlider.setValue(1015);
        simulationSpeedSlider.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        simulationSpeedSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SimulationParametersTopComponent.class, "SimulationParametersTopComponent.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(simulationSpeedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(simulationSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populationNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populationNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_populationNumberFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField populationNumberField;
    private javax.swing.JSlider simulationSpeedSlider;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
    
    public void stateChanged(ChangeEvent e) {

    }

    @Override
    public void resultChanged(LookupEvent le) {        
         Lookup.Result result = (Lookup.Result) le.getSource();
         if(result.allInstances().size() > 0){
             populationNumber = (Integer) result.allInstances().iterator().next();
             populationNumberField.setText(populationNumber.toString());
         } 
    }
    
    public class JSliderListener implements ChangeListener{

        @Override
        public void stateChanged(ChangeEvent e) {
            content.set(Collections.singleton(new Integer(simulationSpeedSlider.getValue())),null);

        }


        
    }
    
}
